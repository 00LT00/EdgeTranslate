!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=4)}({4:function(e,t){function n(e){r("DTSetting",e)}function r(e,t){var n={};n[e]=t,chrome.storage.sync.set(n)}window.onload=function(){var e=document.getElementsByClassName("i18n");for(let t=0;t<e.length;t++)e[t].insertAdjacentText("beforeEnd",chrome.i18n.getMessage(e[t].getAttribute("data-i18n-name")));chrome.storage.sync.get(["DTSetting","OtherSettings"],function(e){var t=e.DTSetting,o=e.OtherSettings,i=document.getElementsByClassName("dt-option"),u=document.getElementsByClassName("other-option");for(let e=0;e<i.length;e++)i[e].checked=-1!==t.indexOf(i[e].value);for(let e=0;e<u.length;e++)u[e].checked=o[u[e].value];for(let e=0;e<i.length;e++)i[e].onchange=function(){this.checked?t.push(this.value):t.splice(t.indexOf(this.value),1),n(t)};for(let e=0;e<u.length;e++)u[e].onchange=function(){o[u[e].value]=this.checked,r("OtherSettings",o)}})}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,