!function(e){var a={};function n(t){if(a[t])return a[t].exports;var l=a[t]={i:t,l:!1,exports:{}};return e[t].call(l.exports,l,l.exports,n),l.l=!0,l.exports}n.m=e,n.c=a,n.d=function(e,a,t){n.o(e,a)||Object.defineProperty(e,a,{enumerable:!0,get:t})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,a){if(1&a&&(e=n(e)),8&a)return e;if(4&a&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&a&&"string"!=typeof e)for(var l in e)n.d(t,l,function(a){return e[a]}.bind(null,l));return t},n.n=function(e){var a=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(a,"a",a),a},n.o=function(e,a){return Object.prototype.hasOwnProperty.call(e,a)},n.p="",n(n.s=5)}({0:function(e,a,n){"use strict";n.d(a,"b",function(){return l}),n.d(a,"a",function(){return i});const t="https://translate.google.cn/translate_a/single?client=gtx";function l(e,a){chrome.storage.sync.get("languageSetting",function(n){var l=n.languageSetting,i=t+"&sl="+l.sl+"&tl="+l.tl;chrome.storage.sync.get("DTSetting",function(n){var t=i,l=n.DTSetting,u=new XMLHttpRequest;l.forEach(e=>{t=t+"&dt="+e}),u.open("GET",t+"&q="+e,!0),u.send(),u.onreadystatechange=function(){4===u.readyState&&200===u.status?a(function(e){for(var a=new Object,n=0;n<e.length;n++)if(e[n]){var t=e[n];switch(n){case 0:var l=[],i=[];t.forEach(e=>{l.push(e[0]),i.push(e[1])}),a.mainMeaning=l.join(""),a.originalText=i.join("");break;case 1:a.detailedMeanings=new Array,t.forEach(e=>a.detailedMeanings.push({type:e[0],meaning:e[1].join(", ")}));break;case 5:if(t.length<=1){let e=new Array;t[0][2].forEach(a=>e.push(a[0])),a.commonMeanings=e.join(", ")}break;case 11:a.synonyms=new Array,t.forEach(e=>{let n=new Object;n.type=e[0],n.words=new Array,e[1].forEach(e=>n.words.push(e[0].join(", "))),a.synonyms.push(n)});break;case 12:a.definitions=new Array,t.forEach(e=>{let n=new Object;n.type=e[0],n.meanings=new Array,e[1].forEach(e=>n.meanings.push({meaning:e[0],example:e[2]})),a.definitions.push(n)});break;case 13:a.examples=new Array,t.forEach(e=>e.forEach(e=>a.examples.push(e[0])));break;case 14:a.phrases=t[0]}}return a}(JSON.parse(u.response))):200!==u.status&&alert("无法请求翻译，请检查网络连接")}})})}function i(e,a){chrome.tabs.query({active:!0,currentWindow:!0},function(n){chrome.runtime.lastError?alert(e.mainMeaning):chrome.tabs.executeScript(n[0].id,{file:"./display/display.js"},function(t){chrome.runtime.lastError?chrome.extension.isAllowedFileSchemeAccess(function(a){if(a)alert(e.mainMeaning);else if(confirm(chrome.i18n.getMessage("PermissionRemind"))){let e="chrome://extensions/?id="+chrome.runtime.id;chrome.tabs.create({url:e,index:n[0].index})}else alert(e.mainMeaning)}):e&&(chrome.tabs.sendMessage(n[0].id,e),a&&a())})})}},5:function(e,a,n){"use strict";n.r(a);var t=n(0);const l=[{name:"ChineseSimplified",value:"zh-cn"},{name:"English",value:"en"},{name:"ChineseTraditional",value:"zh-tw"},{name:"Afrikaans",value:"af"},{name:"Albanian",value:"sq"},{name:"Amharic",value:"am"},{name:"Arabic",value:"ar"},{name:"Armenian",value:"hy"},{name:"Azerbaijani",value:"az"},{name:"Basque",value:"eu"},{name:"Belarusian",value:"be"},{name:"Bengali",value:"bn"},{name:"Bosnian",value:"bs"},{name:"Bulgarian",value:"bg"},{name:"Catalan",value:"ca"},{name:"Cebuano",value:"ceb"},{name:"Chichewa",value:"ny"},{name:"Corsican",value:"co"},{name:"Croatian",value:"hr"},{name:"Czech",value:"cs"},{name:"Danish",value:"da"},{name:"Dutch",value:"nl"},{name:"Esperanto",value:"eo"},{name:"Estonian",value:"et"},{name:"Filipino",value:"tl"},{name:"Finnish",value:"fi"},{name:"French",value:"fr"},{name:"Frisian",value:"fy"},{name:"Galician",value:"gl"},{name:"Georgian",value:"ka"},{name:"German",value:"de"},{name:"Greek",value:"el"},{name:"Gujarati",value:"gu"},{name:"HaitianCreole",value:"ht"},{name:"Hausa",value:"ha"},{name:"Hawaiian",value:"haw"},{name:"Hebrew",value:"iw"},{name:"Hindi",value:"hi"},{name:"Hmong",value:"hmn"},{name:"Hungarian",value:"hu"},{name:"Icelandic",value:"is"},{name:"Igbo",value:"ig"},{name:"Indonesian",value:"id"},{name:"Irish",value:"ga"},{name:"Italian",value:"it"},{name:"Japanese",value:"ja"},{name:"Javanese",value:"jw"},{name:"Kannada",value:"kn"},{name:"Kazakh",value:"kk"},{name:"Khmer",value:"km"},{name:"Korean",value:"ko"},{name:"Kurdish",value:"ku"},{name:"Kyrgyz",value:"ky"},{name:"Lao",value:"lo"},{name:"Latin",value:"la"},{name:"Latvian",value:"lv"},{name:"Lithuanian",value:"lt"},{name:"Luxembourgish",value:"lb"},{name:"Macedonian",value:"mk"},{name:"Malagasy",value:"mg"},{name:"Malay",value:"ms"},{name:"Malayalam",value:"ml"},{name:"Maltese",value:"mt"},{name:"Maori",value:"mi"},{name:"Marathi",value:"mr"},{name:"Mongolian",value:"mn"},{name:"Myanmar",value:"my"},{name:"Nepali",value:"ne"},{name:"Norwegian",value:"no"},{name:"Pashto",value:"ps"},{name:"Persian",value:"fa"},{name:"Polish",value:"pl"},{name:"Portuguese",value:"pt"},{name:"Punjabi",value:"ma"},{name:"Romanian",value:"ro"},{name:"Russian",value:"ru"},{name:"Samoan",value:"sm"},{name:"ScotsGaelic",value:"gd"},{name:"Serbian",value:"sr"},{name:"Sesotho",value:"st"},{name:"Shona",value:"sn"},{name:"Sindhi",value:"sd"},{name:"Sinhala",value:"si"},{name:"Slovak",value:"sk"},{name:"Slovenian",value:"sl"},{name:"Somali",value:"so"},{name:"Spanish",value:"es"},{name:"Sundanese",value:"su"},{name:"Swahili",value:"sw"},{name:"Swedish",value:"sv"},{name:"Tajik",value:"tg"},{name:"Tamil",value:"ta"},{name:"Telugu",value:"te"},{name:"Thai",value:"th"},{name:"Turkish",value:"tr"},{name:"Ukrainian",value:"uk"},{name:"Urdu",value:"ur"},{name:"Uzbek",value:"uz"},{name:"Vietnamese",value:"vi"},{name:"Welsh",value:"cy"},{name:"Xhosa",value:"xh"},{name:"Yiddish",value:"yi"},{name:"Yoruba",value:"yo"},{name:"Zulu",value:"zu"}];function i(e,a){!function(e,a){var n={};n[e]=a,chrome.storage.sync.set(n)}("languageSetting",{sl:e,tl:a})}function u(){var e=document.getElementById("translate_input").value;if(""!==e.replace(/\s*/,"")){document.getElementById("hint_message").style.display="none";Object(t.b)(e,function(e){Object(t.a)(e,function(){window.close()})})}else document.getElementById("hint_message").style.display="inline"}function o(){var e=document.getElementById("setting"),a=document.getElementById("arrow-up"),n=document.getElementById("arrow-down");e.style.display&&"none"!=e.style.display?(e.style.display="none",n.style.display="inline",a.style.display="none"):(e.style.display="block",n.style.display="none",a.style.display="inline")}function r(e){"13"==(e.charCode||e.keyCode)&&u()}window.onload=function(){var e=document.getElementsByClassName("i18n");for(let a=0;a<e.length;a++)e[a].insertAdjacentText("beforeEnd",chrome.i18n.getMessage(e[a].getAttribute("data-i18n-name")));chrome.storage.sync.get("languageSetting",function(e){var n=e.languageSetting,t=document.getElementById("sl"),u=document.getElementById("tl"),o=document.getElementById("exchange");o.onclick=function(){if("auto"!==t.value){let e=u.value;u.value=t.value,t.value=e,i(t.value,u.value)}},l.forEach(e=>{let a=e.value,l=chrome.i18n.getMessage(e.name);n&&a==n.sl?t.options.add(new Option(l,a,!0,!0)):t.options.add(new Option(l,a)),n&&a==n.tl?u.options.add(new Option(l,a,!0,!0)):u.options.add(new Option(l,a))}),a(o,t),t.onchange=function(){a(o,t),i(t.options[t.selectedIndex].value,u.options[u.selectedIndex].value)},u.onchange=function(){i(t.options[t.selectedIndex].value,u.options[u.selectedIndex].value)}});var a=function(e,a){"auto"===a.value?e.style.color="gray":e.style.color="#4a8cf7"};document.getElementById("translateSubmit").addEventListener("click",u),document.addEventListener("keypress",r),document.getElementById("setting-switch").addEventListener("click",o)}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,