!function(e){var n={};function t(s){if(n[s])return n[s].exports;var i=n[s]={i:s,l:!1,exports:{}};return e[s].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=n,t.d=function(e,n,s){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:s})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(t.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)t.d(s,i,function(n){return e[n]}.bind(null,i));return s},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=1)}([,function(e,n,t){"use strict";t.r(n);var s='<i class="translate-icon translate-icon-tuding-fix translate-fix" title="固定侧边栏"></i><i class="translate-icon translate-icon-tuding-full translate-fix" title="解除固定"></i><i class="translate-icon translate-icon-close"></i><div class="translate-main-meaning"><% if (this.mainMeaning.length <= 6) { %><p class="translate-main-meaning-content-larger"><% this.mainMeaning %></p><% } %><% else if (this.mainMeaning.length > 6 && this.mainMeaning.length <= 12) { %><p class="translate-main-meaning-content-large"><% this.mainMeaning %></p><% } %><% else if (this.mainMeaning.length > 12 && this.mainMeaning.length <= 460) { %><p class="translate-main-meaning-content-small"><% this.mainMeaning %></p><% } %><% else { %><p class="translate-main-meaning-content-smaller"><% this.mainMeaning %></p><% } %></div><div class="translate-common-meanings"><% if (this.commonMeanings && this.commonMeanings.length > 0) { %><p class="translate-content-title"><% chrome.i18n.getMessage("CommonMeanings") %>: </p><ul class="translate-list"><li class="translate-common-meanings-content"><% this.commonMeanings %></li></ul><% } %></div><div class="translate-detailed-meanings"><% if (this.detailedMeanings && this.detailedMeanings.length > 0) { %><p class="translate-content-title"><% chrome.i18n.getMessage("DetailedMeanings") %>: </p><% for (let i in this.detailedMeanings) { %><p class="translate-detailed-meanings-content"><span class="translate-word-type"><% this.detailedMeanings[i].type + ": " %></span><span class="translate-content"><% this.detailedMeanings[i].meaning %></span></p><% } %><% } %></div><div class="translate-definitions"><% if (this.definitions && this.definitions.length > 0) { %><p class="translate-content-title"><% chrome.i18n.getMessage("Definitions") %>: </p><% for (let i in this.definitions) { %><div class="translate-definitions-content"><p class="translate-word-type"><% this.definitions[i].type + ": " %></p><ul class="translate-list"><% for (let j in this.definitions[i].meanings) { %><li><span class="translate-word-type"><% chrome.i18n.getMessage("DefinitionsMeaning") %>: </span><span class="translate-content"><% this.definitions[i].meanings[j].meaning %></span><span class="translate-word-type"><% chrome.i18n.getMessage("DefinitionsExample") %>: </span><span class="translate-content"><% this.definitions[i].meanings[j].example %></span></li><% } %></ul></div><% } %><% } %></div><div class="translate-synonyms"><% if (this.synonyms && this.synonyms.length > 0) { %><p class="translate-content-title"><% chrome.i18n.getMessage("Synonyms") %>: </p><% for (let i in this.synonyms) { %><p class="translate-synonyms-content"><span class="translate-word-type"><% this.synonyms[i].type + ": " %></span><span class="translate-synonyms-words"><% this.synonyms[i].words[0] %></span></p><% } %><% } %></div><div class="translate-phrases"><% if (this.phrases && this.phrases.length > 0) { %><p class="translate-content-title"><% chrome.i18n.getMessage("Phrases") %>: </p><ul class="translate-list"><% for (let i in this.phrases) { %><li class="translate-content"><% this.phrases[i] %></li><% } %></ul><% } %></div><div class="translate-examples"><% if (this.examples && this.examples.length > 0) { %><p class="translate-content-title"><% chrome.i18n.getMessage("Examples") %>: </p><p><% for (let i in this.examples) { %><p class="translate-sentences"><% this.examples[i] %></p><% } %></p><% } %></div>',i=function(e,n){const t=/<%\s*(.*?)\s*%>/g,s=/(if|while|for)\s*\(.+\)\s*\{|else(\s+if\s*\(.+\))?\s*\{|}/;var i,a=0,l=["var result = new Array();"];for(;i=t.exec(e);){i.index>a&&l.push("result.push('"+e.substring(a,i.index)+"');");var o=i[1];s.test(o)?l.push(o):l.push("result.push("+o+");"),a=i.index+i[0].length}a<e.length-1&&l.push("result.push('"+e.substring(a,e.length)+"');");return l.push("return result.join('');"),new Function(l.join("").replace(/\n|\r/g,"")).apply(n)};n.default=c;var a,l,o,r=!1;function c(e){!function(e){d(a,document.documentElement)?(a.style.transition="none",a.style.right="-"+a.clientWidth+"px",setTimeout(function(){a.style.transition="right 300ms",a.style.right="0"},50)):((a=document.createElement("DIV")).id="translate_frame",document.body.style.transition="width 500ms",document.body.style.width="85%",document.documentElement.appendChild(a));a.innerHTML=i(s,e),document.getElementsByClassName("translate-icon-close")[0].onclick=u,document.documentElement.addEventListener("mousedown",m),a.addEventListener("mousedown",f),a.addEventListener("mousemove",h),document.addEventListener("mousemove",p),document.addEventListener("mouseup",g),document.getElementsByClassName("translate-icon-tuding-fix")[0].addEventListener("click",y),document.getElementsByClassName("translate-icon-tuding-full")[0].addEventListener("click",v)}(e),chrome.runtime.onMessage.removeListener(c)}function d(e,n){if(!e||!n)return!1;for(;e&&!e.isSameNode(document.body);){if(e.isSameNode(n))return!0;e=e.parentNode}return!1}function m(e){d(e.target,a)||u()}function u(){d(a,document.documentElement)&&(document.documentElement.removeChild(a),document.body.style.width="100%",document.documentElement.removeEventListener("mousedown",m),document.removeEventListener("mousemove",p),document.removeEventListener("mouseup",g))}function p(e){r&&(a.style.width=l-e.x+o+"px",document.body.style.width=window.innerWidth-o-(l-e.x)+"px")}function g(){r&&(a.style.transition="width 500ms",document.body.style.transition="width 500ms",r=!1)}function f(e){var n=e.target;n.isSameNode(a)&&e.x<=n.offsetLeft+4&&(r=!0,a.style.transition="none",document.body.style.transition="none",l=n.offsetLeft,o=n.clientWidth)}function h(e){var n=e.target;n.isSameNode(a)&&(e.x<=n.offsetLeft+4?a.style.cursor="e-resize":a.style.cursor="auto")}function y(){document.getElementsByClassName("translate-icon-tuding-full")[0].style.display="inline",document.getElementsByClassName("translate-icon-tuding-fix")[0].style.display="none",document.documentElement.removeEventListener("mousedown",m)}function v(){document.getElementsByClassName("translate-icon-tuding-full")[0].style.display="none",document.getElementsByClassName("translate-icon-tuding-fix")[0].style.display="inline",document.documentElement.addEventListener("mousedown",m)}chrome.runtime.onMessage.addListener(c)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Rpc3BsYXkvdGVtcGxhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Rpc3BsYXkvZW5naW5lLmpzIiwid2VicGFjazovLy8uL3NyYy9kaXNwbGF5L2Rpc3BsYXkuanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJ0ZW1wbGF0ZSIsImVuZ2luZSIsImNvbnRlbnRzIiwiQ09OVEVOVF9SRUdFWCIsIkVYUFJFU1NJT05fUkVHRVgiLCJtYXRjaCIsImxhc3RJbmRleCIsImNvZGUiLCJleGVjIiwiaW5kZXgiLCJwdXNoIiwic3Vic3RyaW5nIiwiZXhwcmVzc2lvbiIsInRlc3QiLCJsZW5ndGgiLCJGdW5jdGlvbiIsImpvaW4iLCJyZXBsYWNlIiwiYXBwbHkiLCJfX3dlYnBhY2tfZXhwb3J0c19fIiwiZGlzcGxheV9mcmFtZSIsIm9yaWdpblgiLCJvcmlnaW5XaWR0aCIsIm1vdXNlZG93biIsImRpc3BsYXlfZGlzcGxheSIsImNvbnRlbnQiLCJpc0NoaWxkTm9kZSIsImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50Iiwic3R5bGUiLCJ0cmFuc2l0aW9uIiwicmlnaHQiLCJjbGllbnRXaWR0aCIsInNldFRpbWVvdXQiLCJjcmVhdGVFbGVtZW50IiwiaWQiLCJib2R5Iiwid2lkdGgiLCJhcHBlbmRDaGlsZCIsImlubmVySFRNTCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJvbmNsaWNrIiwicmVtb3ZlU2xpZGVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsaWNrTGlzdGVuZXIiLCJkcmFnSGFuZGxlciIsIm1vdmVIYW5kbGVyIiwiZHJhZ09uIiwiZHJhZ09mZiIsImZpeE9uIiwiZml4T2ZmIiwiY3JlYXRlQmxvY2siLCJjaHJvbWUiLCJydW50aW1lIiwib25NZXNzYWdlIiwicmVtb3ZlTGlzdGVuZXIiLCJub2RlMSIsIm5vZGUyIiwiaXNTYW1lTm9kZSIsInBhcmVudE5vZGUiLCJldmVudCIsInRhcmdldCIsInJlbW92ZUNoaWxkIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIngiLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwibm9kZSIsIm9mZnNldExlZnQiLCJjdXJzb3IiLCJkaXNwbGF5IiwiYWRkTGlzdGVuZXIiXSwibWFwcGluZ3MiOiJhQUNBLElBQUFBLEtBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsSUFDQUcsRUFBQUgsRUFDQUksR0FBQSxFQUNBSCxZQVVBLE9BTkFJLEVBQUFMLEdBQUFNLEtBQUFKLEVBQUFELFFBQUFDLElBQUFELFFBQUFGLEdBR0FHLEVBQUFFLEdBQUEsRUFHQUYsRUFBQUQsUUFLQUYsRUFBQVEsRUFBQUYsRUFHQU4sRUFBQVMsRUFBQVYsRUFHQUMsRUFBQVUsRUFBQSxTQUFBUixFQUFBUyxFQUFBQyxHQUNBWixFQUFBYSxFQUFBWCxFQUFBUyxJQUNBRyxPQUFBQyxlQUFBYixFQUFBUyxHQUEwQ0ssWUFBQSxFQUFBQyxJQUFBTCxLQUsxQ1osRUFBQWtCLEVBQUEsU0FBQWhCLEdBQ0Esb0JBQUFpQixlQUFBQyxhQUNBTixPQUFBQyxlQUFBYixFQUFBaUIsT0FBQUMsYUFBd0RDLE1BQUEsV0FFeERQLE9BQUFDLGVB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YSx1QkFBQSxpQ0FBQVgsTUFBQXlDLFFBQUEsU0FDQTNDLFNBQUFhLHVCQUFBLGdDQUFBWCxNQUFBeUMsUUFBQSxPQUNBM0MsU0FBQUMsZ0JBQUFtQyxvQkFBQSxZQUFBbkIsR0FNQSxTQUFBTSxJQUNBdkIsU0FBQWEsdUJBQUEsaUNBQUFYLE1BQUF5QyxRQUFBLE9BQ0EzQyxTQUFBYSx1QkFBQSxnQ0FBQVgsTUFBQXlDLFFBQUEsU0FDQTNDLFNBQUFDLGdCQUFBZSxpQkFBQSxZQUFBQyxHQU9BUSxPQUFBQyxRQUFBQyxVQUFBaUIsWUFBQS9DIiwiZmlsZSI6Ii9kaXNwbGF5L2Rpc3BsYXkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMSk7XG4iLCJleHBvcnQge3RlbXBsYXRlfTtcclxudmFyIHRlbXBsYXRlID0gICc8aSBjbGFzcz1cInRyYW5zbGF0ZS1pY29uIHRyYW5zbGF0ZS1pY29uLXR1ZGluZy1maXggdHJhbnNsYXRlLWZpeFwiIHRpdGxlPVwi5Zu65a6a5L6n6L655qCPXCI+PC9pPicrXHJcbiAgICAgICAgICAgICAgICAnPGkgY2xhc3M9XCJ0cmFuc2xhdGUtaWNvbiB0cmFuc2xhdGUtaWNvbi10dWRpbmctZnVsbCB0cmFuc2xhdGUtZml4XCIgdGl0bGU9XCLop6PpmaTlm7rlrppcIj48L2k+JytcclxuICAgICAgICAgICAgICAgICc8aSBjbGFzcz1cInRyYW5zbGF0ZS1pY29uIHRyYW5zbGF0ZS1pY29uLWNsb3NlXCI+PC9pPicgKyBcclxuICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwidHJhbnNsYXRlLW1haW4tbWVhbmluZ1wiPicgKyBcclxuICAgICAgICAgICAgICAgICAgICc8JSBpZiAodGhpcy5tYWluTWVhbmluZy5sZW5ndGggPD0gNikgeyAlPicgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAnPHAgY2xhc3M9XCJ0cmFuc2xhdGUtbWFpbi1tZWFuaW5nLWNvbnRlbnQtbGFyZ2VyXCI+PCUgdGhpcy5tYWluTWVhbmluZyAlPjwvcD4nICsgXHJcbiAgICAgICAgICAgICAgICAgICAnPCUgfSAlPicgKyBcclxuICAgICAgICAgICAgICAgICAgICc8JSBlbHNlIGlmICh0aGlzLm1haW5NZWFuaW5nLmxlbmd0aCA+IDYgJiYgdGhpcy5tYWluTWVhbmluZy5sZW5ndGggPD0gMTIpIHsgJT4nICsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgJzxwIGNsYXNzPVwidHJhbnNsYXRlLW1haW4tbWVhbmluZy1jb250ZW50LWxhcmdlXCI+PCUgdGhpcy5tYWluTWVhbmluZyAlPjwvcD4nICsgXHJcbiAgICAgICAgICAgICAgICAgICAnPCUgfSAlPicgKyBcclxuICAgICAgICAgICAgICAgICAgICc8JSBlbHNlIGlmICh0aGlzLm1haW5NZWFuaW5nLmxlbmd0aCA+IDEyICYmIHRoaXMubWFpbk1lYW5pbmcubGVuZ3RoIDw9IDQ2MCkgeyAlPicgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAnPHAgY2xhc3M9XCJ0cmFuc2xhdGUtbWFpbi1tZWFuaW5nLWNvbnRlbnQtc21hbGxcIj48JSB0aGlzLm1haW5NZWFuaW5nICU+PC9wPicgKyBcclxuICAgICAgICAgICAgICAgICAgICc8JSB9ICU+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgJzwlIGVsc2UgeyAlPicgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAnPHAgY2xhc3M9XCJ0cmFuc2xhdGUtbWFpbi1tZWFuaW5nLWNvbnRlbnQtc21hbGxlclwiPjwlIHRoaXMubWFpbk1lYW5pbmcgJT48L3A+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgJzwlIH0gJT4nICsgXHJcbiAgICAgICAgICAgICAgICc8L2Rpdj4nICsgXHJcbiAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwidHJhbnNsYXRlLWNvbW1vbi1tZWFuaW5nc1wiPicgKyBcclxuICAgICAgICAgICAgICAgICAgICc8JSBpZiAodGhpcy5jb21tb25NZWFuaW5ncyAmJiB0aGlzLmNvbW1vbk1lYW5pbmdzLmxlbmd0aCA+IDApIHsgJT4nICsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICc8cCBjbGFzcz1cInRyYW5zbGF0ZS1jb250ZW50LXRpdGxlXCI+PCUgY2hyb21lLmkxOG4uZ2V0TWVzc2FnZShcIkNvbW1vbk1lYW5pbmdzXCIpICU+OiA8L3A+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAnPHVsIGNsYXNzPVwidHJhbnNsYXRlLWxpc3RcIj4nK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxsaSBjbGFzcz1cInRyYW5zbGF0ZS1jb21tb24tbWVhbmluZ3MtY29udGVudFwiPjwlIHRoaXMuY29tbW9uTWVhbmluZ3MgJT48L2xpPicgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAgJzwvdWw+JytcclxuICAgICAgICAgICAgICAgICAgICc8JSB9ICU+JyArIFxyXG4gICAgICAgICAgICAgICAnPC9kaXY+JyArIFxyXG4gICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cInRyYW5zbGF0ZS1kZXRhaWxlZC1tZWFuaW5nc1wiPicgKyBcclxuICAgICAgICAgICAgICAgICAgICc8JSBpZiAodGhpcy5kZXRhaWxlZE1lYW5pbmdzICYmIHRoaXMuZGV0YWlsZWRNZWFuaW5ncy5sZW5ndGggPiAwKSB7ICU+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICc8cCBjbGFzcz1cInRyYW5zbGF0ZS1jb250ZW50LXRpdGxlXCI+PCUgY2hyb21lLmkxOG4uZ2V0TWVzc2FnZShcIkRldGFpbGVkTWVhbmluZ3NcIikgJT46IDwvcD4nICsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgJzwlIGZvciAobGV0IGkgaW4gdGhpcy5kZXRhaWxlZE1lYW5pbmdzKSB7ICU+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAnPHAgY2xhc3M9XCJ0cmFuc2xhdGUtZGV0YWlsZWQtbWVhbmluZ3MtY29udGVudFwiPicgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8c3BhbiBjbGFzcz1cInRyYW5zbGF0ZS13b3JkLXR5cGVcIj48JSB0aGlzLmRldGFpbGVkTWVhbmluZ3NbaV0udHlwZSArIFwiOiBcIiAlPjwvc3Bhbj4nICsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPHNwYW4gY2xhc3M9XCJ0cmFuc2xhdGUtY29udGVudFwiPjwlIHRoaXMuZGV0YWlsZWRNZWFuaW5nc1tpXS5tZWFuaW5nICU+PC9zcGFuPicgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvcD4nICsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgJzwlIH0gJT4nICsgXHJcbiAgICAgICAgICAgICAgICAgICAnPCUgfSAlPicgKyBcclxuICAgICAgICAgICAgICAgJzwvZGl2PicgKyBcclxuICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJ0cmFuc2xhdGUtZGVmaW5pdGlvbnNcIj4nICsgXHJcbiAgICAgICAgICAgICAgICAgICAnPCUgaWYgKHRoaXMuZGVmaW5pdGlvbnMgJiYgdGhpcy5kZWZpbml0aW9ucy5sZW5ndGggPiAwKSB7ICU+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICc8cCBjbGFzcz1cInRyYW5zbGF0ZS1jb250ZW50LXRpdGxlXCI+PCUgY2hyb21lLmkxOG4uZ2V0TWVzc2FnZShcIkRlZmluaXRpb25zXCIpICU+OiA8L3A+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICc8JSBmb3IgKGxldCBpIGluIHRoaXMuZGVmaW5pdGlvbnMpIHsgJT4nICsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwidHJhbnNsYXRlLWRlZmluaXRpb25zLWNvbnRlbnRcIj4nICsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPHAgY2xhc3M9XCJ0cmFuc2xhdGUtd29yZC10eXBlXCI+PCUgdGhpcy5kZWZpbml0aW9uc1tpXS50eXBlICsgXCI6IFwiICU+PC9wPicgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8dWwgY2xhc3M9XCJ0cmFuc2xhdGUtbGlzdFwiPicgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPCUgZm9yIChsZXQgaiBpbiB0aGlzLmRlZmluaXRpb25zW2ldLm1lYW5pbmdzKSB7ICU+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGxpPicgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8c3BhbiBjbGFzcz1cInRyYW5zbGF0ZS13b3JkLXR5cGVcIj48JSBjaHJvbWUuaTE4bi5nZXRNZXNzYWdlKFwiRGVmaW5pdGlvbnNNZWFuaW5nXCIpICU+OiA8L3NwYW4+JytcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8c3BhbiBjbGFzcz1cInRyYW5zbGF0ZS1jb250ZW50XCI+PCUgdGhpcy5kZWZpbml0aW9uc1tpXS5tZWFuaW5nc1tqXS5tZWFuaW5nICU+PC9zcGFuPicgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8c3BhbiBjbGFzcz1cInRyYW5zbGF0ZS13b3JkLXR5cGVcIj48JSBjaHJvbWUuaTE4bi5nZXRNZXNzYWdlKFwiRGVmaW5pdGlvbnNFeGFtcGxlXCIpICU+OiA8L3NwYW4+JytcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8c3BhbiBjbGFzcz1cInRyYW5zbGF0ZS1jb250ZW50XCI+PCUgdGhpcy5kZWZpbml0aW9uc1tpXS5tZWFuaW5nc1tqXS5leGFtcGxlICU+PC9zcGFuPicgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvbGk+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8JSB9ICU+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvdWw+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICc8JSB9ICU+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgJzwlIH0gJT4nICsgXHJcbiAgICAgICAgICAgICAgICc8L2Rpdj4nICsgXHJcbiAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwidHJhbnNsYXRlLXN5bm9ueW1zXCI+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgJzwlIGlmICh0aGlzLnN5bm9ueW1zICYmIHRoaXMuc3lub255bXMubGVuZ3RoID4gMCkgeyAlPicgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAnPHAgY2xhc3M9XCJ0cmFuc2xhdGUtY29udGVudC10aXRsZVwiPjwlIGNocm9tZS5pMThuLmdldE1lc3NhZ2UoXCJTeW5vbnltc1wiKSAlPjogPC9wPicgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAnPCUgZm9yIChsZXQgaSBpbiB0aGlzLnN5bm9ueW1zKSB7ICU+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAnPHAgY2xhc3M9XCJ0cmFuc2xhdGUtc3lub255bXMtY29udGVudFwiPicgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8c3BhbiBjbGFzcz1cInRyYW5zbGF0ZS13b3JkLXR5cGVcIj48JSB0aGlzLnN5bm9ueW1zW2ldLnR5cGUgKyBcIjogXCIgJT48L3NwYW4+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxzcGFuIGNsYXNzPVwidHJhbnNsYXRlLXN5bm9ueW1zLXdvcmRzXCI+PCUgdGhpcy5zeW5vbnltc1tpXS53b3Jkc1swXSAlPjwvc3Bhbj4nICsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L3A+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICc8JSB9ICU+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgJzwlIH0gJT4nICtcclxuICAgICAgICAgICAgICAgJzwvZGl2PicgKyBcclxuICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJ0cmFuc2xhdGUtcGhyYXNlc1wiPicgKyBcclxuICAgICAgICAgICAgICAgICAgICc8JSBpZiAodGhpcy5waHJhc2VzICYmIHRoaXMucGhyYXNlcy5sZW5ndGggPiAwKSB7ICU+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICc8cCBjbGFzcz1cInRyYW5zbGF0ZS1jb250ZW50LXRpdGxlXCI+PCUgY2hyb21lLmkxOG4uZ2V0TWVzc2FnZShcIlBocmFzZXNcIikgJT46IDwvcD4nICsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgJzx1bCBjbGFzcz1cInRyYW5zbGF0ZS1saXN0XCI+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAnPCUgZm9yIChsZXQgaSBpbiB0aGlzLnBocmFzZXMpIHsgJT4nICsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGxpIGNsYXNzPVwidHJhbnNsYXRlLWNvbnRlbnRcIj48JSB0aGlzLnBocmFzZXNbaV0gJT48L2xpPicgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwlIH0gJT4nICsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgJzwvdWw+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgJzwlIH0gJT4nICsgXHJcbiAgICAgICAgICAgICAgICc8L2Rpdj4nICsgXHJcbiAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwidHJhbnNsYXRlLWV4YW1wbGVzXCI+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgJzwlIGlmICh0aGlzLmV4YW1wbGVzICYmIHRoaXMuZXhhbXBsZXMubGVuZ3RoID4gMCkgeyAlPicgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAnPHAgY2xhc3M9XCJ0cmFuc2xhdGUtY29udGVudC10aXRsZVwiPjwlIGNocm9tZS5pMThuLmdldE1lc3NhZ2UoXCJFeGFtcGxlc1wiKSAlPjogPC9wPicgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAnPHA+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAnPCUgZm9yIChsZXQgaSBpbiB0aGlzLmV4YW1wbGVzKSB7ICU+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxwIGNsYXNzPVwidHJhbnNsYXRlLXNlbnRlbmNlc1wiPjwlIHRoaXMuZXhhbXBsZXNbaV0gJT48L3A+JyArIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAnPCUgfSAlPicgKyBcclxuICAgICAgICAgICAgICAgICAgICAgICAnPC9wPicgKyBcclxuICAgICAgICAgICAgICAgICAgICc8JSB9ICU+JyArIFxyXG4gICAgICAgICAgICAgICAnPC9kaXY+JzsiLCJleHBvcnQgZGVmYXVsdCByZW5kZXI7XHJcbi8qKlxyXG4gKiDnroDmmJPnmoRIVE1M5qih5p2/5byV5pOO77yM5Zyo5pys6aG555uu5Lit55So5LqO5riy5p+T5bGV56S657+76K+R57uT5p6c55qE6aG16Z2i44CCXHJcbiAqIFxyXG4gKiBAcGFyYW0ge1N0cmluZ30gdGVtcGxhdGUg5b6F5riy5p+T55qESFRNTOaooeadv+OAglxyXG4gKiBAcGFyYW0ge09iamVjdH0gY29udGVudHMg55So5LqO5aGr5YWF5qih5p2/55qE5pWw5o2u44CCXHJcbiAqIEByZXR1cm5zIOa4suafk+WujOaIkOeahEhUTUzmlofmnKzjgIJcclxuICovXHJcbmZ1bmN0aW9uIHJlbmRlcih0ZW1wbGF0ZSwgY29udGVudHMpIHtcclxuICAgIC8vIOWMuemFjeaooeadv+S4reeahOW+heWhq+WFhemDqOWIhlxyXG4gICAgY29uc3QgQ09OVEVOVF9SRUdFWCA9IC88JVxccyooLio/KVxccyolPi9nO1xyXG5cclxuICAgIC8vIOWMuemFjeaooeadv+S4reeahOmAu+i+keihqOi+vuW8j1xyXG4gICAgY29uc3QgRVhQUkVTU0lPTl9SRUdFWCA9IC8oaWZ8d2hpbGV8Zm9yKVxccypcXCguK1xcKVxccypcXHt8ZWxzZShcXHMraWZcXHMqXFwoLitcXCkpP1xccypcXHt8fS87XHJcblxyXG4gICAgLy8g5LiK5qyh5Yy56YWN57uT5p2f5ZCO5Ymp5L2Z5a2Q5Liy5ZyodGVtcGxhdGXkuK3nmoTotbflp4vkvY3nva5cclxuICAgIHZhciBsYXN0SW5kZXggPSAwO1xyXG4gICAgdmFyIGNvZGUgPSBbXCJ2YXIgcmVzdWx0ID0gbmV3IEFycmF5KCk7XCJdO1xyXG4gICAgdmFyIG1hdGNoO1xyXG5cclxuICAgIC8vIOS+neasoeWMuemFjeaJgOacieW+heWhq+WFhemhuVxyXG4gICAgd2hpbGUgKG1hdGNoID0gQ09OVEVOVF9SRUdFWC5leGVjKHRlbXBsYXRlKSkge1xyXG4gICAgICAgIC8vIOS7juW9k+WJjeWJqeS9meWtkOS4sueahOi1t+Wni+S9jee9ruWIsOacrOasoeWMuemFjeWIsOeahOW+heWhq+WFhemhueeahOi1t+Wni+S9jee9ruS5i+mXtOeahOmDqOWIhu+8jOebtOaOpeS/neeVmeOAglxyXG4gICAgICAgIGlmIChtYXRjaC5pbmRleCA+IGxhc3RJbmRleCkge1xyXG4gICAgICAgICAgICBjb2RlLnB1c2goXCJyZXN1bHQucHVzaCgnXCIgKyB0ZW1wbGF0ZS5zdWJzdHJpbmcobGFzdEluZGV4LCBtYXRjaC5pbmRleCkgKyBcIicpO1wiKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBleHByZXNzaW9uID0gbWF0Y2hbMV07XHJcbiAgICAgICAgLy8g5aaC5p6c5piv6YC76L6R6KGo6L6+5byP77yM5bCG5YW25L2c5Li65LiA6KGM5Luj56CB5o+S5YWl5Yiw5riy5p+T5Ye95pWw5Lit44CCXHJcbiAgICAgICAgaWYgKEVYUFJFU1NJT05fUkVHRVgudGVzdChleHByZXNzaW9uKSkge1xyXG4gICAgICAgICAgICBjb2RlLnB1c2goZXhwcmVzc2lvbik7XHJcbiAgICAgICAgICAgIC8vIOWmguaenOaYr+S4gOS4quWPmOmHj++8jOiOt+WPluWug+eahOWAvOeUqOS6juWhq+WFheWug+aJgOWcqOeahOS9jee9ruOAglxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNvZGUucHVzaChcInJlc3VsdC5wdXNoKFwiICsgZXhwcmVzc2lvbiArIFwiKTtcIik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsYXN0SW5kZXggPSBtYXRjaC5pbmRleCArIG1hdGNoWzBdLmxlbmd0aDtcclxuICAgIH1cclxuXHJcbiAgICAvLyDlpITnkIbmqKHmnb/mnKvlsL7nmoTpnZ7lvoXloavlhYXmlofmnKzjgIJcclxuICAgIGlmIChsYXN0SW5kZXggPCB0ZW1wbGF0ZS5sZW5ndGggLSAxKSB7XHJcbiAgICAgICAgY29kZS5wdXNoKFwicmVzdWx0LnB1c2goJ1wiICsgdGVtcGxhdGUuc3Vic3RyaW5nKGxhc3RJbmRleCwgdGVtcGxhdGUubGVuZ3RoKSArIFwiJyk7XCIpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvZGUucHVzaChcInJldHVybiByZXN1bHQuam9pbignJyk7XCIpO1xyXG4gICAgLy8gY29uc29sZS5sb2coY29kZS5qb2luKFwiXCIpLnJlcGxhY2UoL1xcbnxcXHIvZywgXCJcIikpO1xyXG4gICAgcmV0dXJuIG5ldyBGdW5jdGlvbihjb2RlLmpvaW4oXCJcIikucmVwbGFjZSgvXFxufFxcci9nLCBcIlwiKSkuYXBwbHkoY29udGVudHMpO1xyXG59IiwiaW1wb3J0IHsgdGVtcGxhdGUgfSBmcm9tICcuL3RlbXBsYXRlLmpzJztcclxuaW1wb3J0IHJlbmRlciBmcm9tICcuL2VuZ2luZS5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBkaXNwbGF5O1xyXG5cclxuLy8g55So5LqO5a2Y5YKo5LiA5LiqZGl25YWD57Sg77yM6L+Z5Liq5YWD57Sg55So5p2l5Zyo6aG16Z2i55qE5Y+z5L6n5bGV56S657+76K+R57uT5p6cXHJcbnZhciBmcmFtZTtcclxuXHJcbnZhciBtb3VzZWRvd24gPSBmYWxzZTsgLy8g5Zyo6byg5qCH5ouW5Yqo6L655qGG5pe277yM55So5LqO5qCH6K6w6byg5qCH5piv5ZCm5bey57uP5oyJ5LiLXHJcbnZhciBvcmlnaW5YOyAvLyDpvKDmoIflvIDlp4vmi5bliqjnmoR45Z2Q5qCH6L205Yid5aeL5L2N572uXHJcbnZhciBvcmlnaW5XaWR0aDsgLy8g5L6n6L655qCP55qE5Yid5aeL5a695bqmXHJcblxyXG4vKipcclxuICog6LSf6LSj5qC55o2u5Lyg5YWl55qE57+76K+R57uT5p6c5YaF5a655bCG57uT5p6c5pi+56S65Zyo55So5oi35q2j5Zyo5L2/55So55qE6aG16Z2i5LitXHJcbiAqIFxyXG4gKiBAcGFyYW0ge09iamVjdH0gY29udGVudCDnv7vor5HnmoTnu5PmnpxcclxuICovXHJcbmZ1bmN0aW9uIGRpc3BsYXkoY29udGVudCkge1xyXG4gICAgY3JlYXRlQmxvY2soY29udGVudCk7XHJcbiAgICBjaHJvbWUucnVudGltZS5vbk1lc3NhZ2UucmVtb3ZlTGlzdGVuZXIoZGlzcGxheSk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiDlnKjpobXpnaLnmoTlj7PkvqfliJvlu7rkuIDlnZfljLrln5/vvIznlKjkuo7mmL7npLrnv7vor5HnmoTnu5PmnpzvvIzliJvlu7rkuIDkuKpmcmFtZeWFg+e0oO+8jOWwhuWFtuaPkuWFpeWIsGRvY3VtZW505LitXHJcbiAqIFxyXG4gKiBAcGFyYW0ge09iamVjdH0gY29udGVudCDnv7vor5HnmoTnu5PmnpxcclxuICovXHJcbmZ1bmN0aW9uIGNyZWF0ZUJsb2NrKGNvbnRlbnQpIHtcclxuICAgIC8vIOWIpOaWrWZyYW1l5piv5ZCm5bey57uP5re75Yqg5Yiw5LqG6aG16Z2i5LitXHJcbiAgICBpZiAoIWlzQ2hpbGROb2RlKGZyYW1lLCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpKSB7IC8vIGZyYW1l5LiN5Zyo6aG16Z2i5Lit77yM5Yib5bu65paw55qEZnJhbWVcclxuICAgICAgICBmcmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ0RJVicpO1xyXG4gICAgICAgIGZyYW1lLmlkID0gJ3RyYW5zbGF0ZV9mcmFtZSc7XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS50cmFuc2l0aW9uID0gJ3dpZHRoIDUwMG1zJztcclxuICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLndpZHRoID0gJzg1JSc7XHJcbiAgICAgICAgLy8g5bCGZnJhbWXmlL7lhaVkb2N1bWVudFxyXG4gICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5hcHBlbmRDaGlsZChmcmFtZSk7XHJcbiAgICB9IGVsc2UgeyAvLyBmcmFtZeW3sue7j+WcqOmhtemdouS4re+8jOebtOaOpeaUueWPmGZyYW1l55qE5riy5p+T5YaF5a65XHJcbiAgICAgICAgZnJhbWUuc3R5bGUudHJhbnNpdGlvbiA9ICdub25lJztcclxuICAgICAgICBmcmFtZS5zdHlsZS5yaWdodCA9ICctJyArIGZyYW1lLmNsaWVudFdpZHRoICsgJ3B4JztcclxuICAgICAgICAvLyDov5nkuKrlu7bml7bnmoTnm67nmoTmmK/kvb/lvpfkvqfovrnmoI/lh7rnjrDnmoTov4fmuKHliqjnlLvnlJ/mlYhcclxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgZnJhbWUuc3R5bGUudHJhbnNpdGlvbiA9ICdyaWdodCAzMDBtcyc7XHJcbiAgICAgICAgICAgIGZyYW1lLnN0eWxlLnJpZ2h0ID0gJzAnO1xyXG4gICAgICAgIH0sIDUwKTtcclxuICAgIH1cclxuICAgIGZyYW1lLmlubmVySFRNTCA9IHJlbmRlcih0ZW1wbGF0ZSwgY29udGVudCk7IC8vIOWwhnRlbXBsYXRlLmpz5Lit55qE5YaF5a656YCa6L+HZW5naW5lLmpz5riy5p+T5oiQaHRtbOWFg+e0oFxyXG4gICAgYWRkRXZlbnRMaXN0ZW5lcigpO1xyXG59XHJcblxyXG4vKipcclxuICog6ZyA6KaB5a+55L6n6L655qCP5Lit55qE5YWD57Sg5re75Yqg5LqL5Lu255uR5ZCs5pe277yM6K+35Zyo5q2k5Ye95pWw5Lit5re75YqgXHJcbiAqL1xyXG5mdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKCkge1xyXG4gICAgLy8g57uZ5YWz6Zet5oyJ6ZKu5re75Yqg54K55Ye75LqL5Lu255uR5ZCs77yM55So5LqO5YWz6Zet5L6n6L655qCPXHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCd0cmFuc2xhdGUtaWNvbi1jbG9zZScpWzBdLm9uY2xpY2sgPSByZW1vdmVTbGlkZXI7XHJcbiAgICAvLyDnu5nngrnlh7vkvqfovrnmoI/kuYvlpJbljLrln5/kuovku7bmt7vliqDnm5HlkKzvvIzngrnlh7vkvqfovrnmoI/kuYvlpJbnmoTpg6jliIblsLHkvJrorqnkvqfovrnmoI/lhbPpl61cclxuICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBjbGlja0xpc3RlbmVyKTtcclxuICAgIGZyYW1lLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGRyYWdIYW5kbGVyKTtcclxuICAgIGZyYW1lLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIG1vdmVIYW5kbGVyKTtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIGRyYWdPbik7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgZHJhZ09mZik7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCd0cmFuc2xhdGUtaWNvbi10dWRpbmctZml4JylbMF0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmaXhPbik7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCd0cmFuc2xhdGUtaWNvbi10dWRpbmctZnVsbCcpWzBdLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZml4T2ZmKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFxyXG4gKiDkuIDkuKrlt6XlhbdhcGks5Yik5pat5Lyg5YWl55qE56ys5LiA5Liq5YWD57Sg5piv5ZCm5piv5Lyg5YWl55qE56ys5LqM5Liq5YWD57Sg55qE5a2Q6IqC54K5XHJcbiAqIFxyXG4gKiBAcGFyYW0ge0VsZW1lbnR9IG5vZGUxIOesrOS4gOS4qmRvY3VtZW50IEVsZW1lbnQg5YWD57SgLOmdnuepulxyXG4gKiBAcGFyYW0ge0VsZW1lbnR9IG5vZGUyIOesrOS6jOS4qmRvY3VtZW50IEVsZW1lbnQg5YWD57Sg77yM6Z2e56m6XHJcbiAqL1xyXG5mdW5jdGlvbiBpc0NoaWxkTm9kZShub2RlMSwgbm9kZTIpIHtcclxuICAgIC8vIOWIpOaWreS8oOWFpeeahOWPguaVsOaYr+WQpuWQiOazlVxyXG4gICAgaWYgKCEobm9kZTEgJiYgbm9kZTIpKVxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIHdoaWxlIChub2RlMSAmJiAhbm9kZTEuaXNTYW1lTm9kZShkb2N1bWVudC5ib2R5KSkge1xyXG4gICAgICAgIGlmIChub2RlMS5pc1NhbWVOb2RlKG5vZGUyKSlcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICBub2RlMSA9IG5vZGUxLnBhcmVudE5vZGU7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBibG9jayBzdGFydFxyXG4gKiDkuovku7bnm5HlkKznmoTlm57osIPlh73mlbDlrprkuYnor7flnKjmraTljLrln5/kuK3ov5vooYxcclxuICovXHJcblxyXG4vKipcclxuICogXHJcbiAqIOeUqOS6juWkhOeQhueCueWHu+mhtemdoumZpOS+p+i+ueagj+WklueahOWMuuWfn+eahOWbnuiwg+WHveaVsCDvvIzotJ/otKPlsIbkvqfovrnmoI/lhbPpl61cclxuICogXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSBldmVudCDngrnlh7vkuovku7bnmoRvYmplY3RcclxuICovXHJcbmZ1bmN0aW9uIGNsaWNrTGlzdGVuZXIoZXZlbnQpIHtcclxuICAgIGxldCBub2RlID0gZXZlbnQudGFyZ2V0O1xyXG4gICAgaWYgKCFpc0NoaWxkTm9kZShub2RlLCBmcmFtZSkpIHtcclxuICAgICAgICByZW1vdmVTbGlkZXIoKTtcclxuICAgIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIOWwhuS+p+i+ueagj+WFg+e0oOS7jumhtemdouS4remZpOWOu++8jOWNs+WwhmZyYW1l5LuOZG9jdW1lbnTkuK3liKDpmaRcclxuICovXHJcbmZ1bmN0aW9uIHJlbW92ZVNsaWRlcigpIHtcclxuICAgIGlmIChpc0NoaWxkTm9kZShmcmFtZSwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KSkge1xyXG4gICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5yZW1vdmVDaGlsZChmcmFtZSk7XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS53aWR0aCA9ICcxMDAlJztcclxuICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgY2xpY2tMaXN0ZW5lcik7XHJcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgZHJhZ09uKTtcclxuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgZHJhZ09mZik7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiDlpITnkIbpvKDmoIfnmoTmi5bliqjkuovku7ZcclxuICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFxyXG4gKi9cclxuZnVuY3Rpb24gZHJhZ09uKGV2ZW50KSB7XHJcbiAgICBpZiAobW91c2Vkb3duKSB7XHJcbiAgICAgICAgZnJhbWUuc3R5bGUud2lkdGggPSBvcmlnaW5YIC0gZXZlbnQueCArIG9yaWdpbldpZHRoICsgJ3B4JztcclxuICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLndpZHRoID0gd2luZG93LmlubmVyV2lkdGggLSBvcmlnaW5XaWR0aCAtIChvcmlnaW5YIC0gZXZlbnQueCkgKyAncHgnO1xyXG4gICAgfVxyXG59XHJcblxyXG4vKipcclxuICog5aSE55CG6YeK5pS+6byg5qCH5oyJ6ZKu5ZCO77yM6L655qGG55qE5a695bqm5YGc5q2i5pS55Y+Y55qE5LqL5Lu2XHJcbiAqL1xyXG5mdW5jdGlvbiBkcmFnT2ZmKCkge1xyXG4gICAgaWYgKG1vdXNlZG93bikge1xyXG4gICAgICAgIGZyYW1lLnN0eWxlLnRyYW5zaXRpb24gPSAnd2lkdGggNTAwbXMnO1xyXG4gICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUudHJhbnNpdGlvbiA9ICd3aWR0aCA1MDBtcyc7XHJcbiAgICAgICAgbW91c2Vkb3duID0gZmFsc2U7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBcclxuICog5aSE55CG6byg5qCH56e75Yqo5Yiw5L6n6L655qCP6L655qGG6ZmE6L+R5pe277yM6byg5qCH5qC35byP55qE5pS55Y+Y5Yqf6IO9XHJcbiAqIFxyXG4gKiBAcGFyYW0ge09iamVjdH0gZXZlbnQg5LqL5Lu25Y+R55Sf55qE5YWo6YOo5L+h5oGvXHJcbiAqL1xyXG5mdW5jdGlvbiBkcmFnSGFuZGxlcihldmVudCkge1xyXG4gICAgdmFyIG5vZGUgPSBldmVudC50YXJnZXQ7XHJcbiAgICBpZiAobm9kZS5pc1NhbWVOb2RlKGZyYW1lKSkge1xyXG4gICAgICAgIGlmIChldmVudC54IDw9IG5vZGUub2Zmc2V0TGVmdCArIDQpIHtcclxuICAgICAgICAgICAgbW91c2Vkb3duID0gdHJ1ZTtcclxuICAgICAgICAgICAgZnJhbWUuc3R5bGUudHJhbnNpdGlvbiA9ICdub25lJztcclxuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS50cmFuc2l0aW9uID0gJ25vbmUnO1xyXG4gICAgICAgICAgICBvcmlnaW5YID0gbm9kZS5vZmZzZXRMZWZ0O1xyXG4gICAgICAgICAgICBvcmlnaW5XaWR0aCA9IG5vZGUuY2xpZW50V2lkdGg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vKipcclxuICogXHJcbiAqIOWkhOeQhum8oOagh+enu+WKqOWIsOS+p+i+ueagj+mZhOi/kem8oOagh+W9oueKtueahOaUueWPmOeJueaViFxyXG4gKiBcclxuICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IOS6i+S7tuWPkeeUn+eahOaJgOacieS/oeaBr1xyXG4gKi9cclxuZnVuY3Rpb24gbW92ZUhhbmRsZXIoZXZlbnQpIHtcclxuICAgIHZhciBub2RlID0gZXZlbnQudGFyZ2V0O1xyXG4gICAgaWYgKG5vZGUuaXNTYW1lTm9kZShmcmFtZSkpIHtcclxuICAgICAgICBpZiAoZXZlbnQueCA8PSBub2RlLm9mZnNldExlZnQgKyA0KVxyXG4gICAgICAgICAgICBmcmFtZS5zdHlsZS5jdXJzb3IgPSAnZS1yZXNpemUnO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgZnJhbWUuc3R5bGUuY3Vyc29yID0gJ2F1dG8nO1xyXG4gICAgfVxyXG59XHJcblxyXG4vKipcclxuICog6LSf6LSj5bCG5L6n6L655qCP5Zu65a6aXHJcbiAqL1xyXG5mdW5jdGlvbiBmaXhPbigpIHtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3RyYW5zbGF0ZS1pY29uLXR1ZGluZy1mdWxsJylbMF0uc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUnO1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgndHJhbnNsYXRlLWljb24tdHVkaW5nLWZpeCcpWzBdLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgY2xpY2tMaXN0ZW5lcik7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiDotJ/otKPop6PpmaTkvqfovrnmoI/nmoTlm7rlrppcclxuICovXHJcbmZ1bmN0aW9uIGZpeE9mZigpIHtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3RyYW5zbGF0ZS1pY29uLXR1ZGluZy1mdWxsJylbMF0uc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3RyYW5zbGF0ZS1pY29uLXR1ZGluZy1maXgnKVswXS5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZSc7XHJcbiAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgY2xpY2tMaXN0ZW5lcik7XHJcbn1cclxuLyoqXHJcbiAqIGVuZCBibG9ja1xyXG4gKi9cclxuXHJcblxyXG5jaHJvbWUucnVudGltZS5vbk1lc3NhZ2UuYWRkTGlzdGVuZXIoZGlzcGxheSk7Il0sInNvdXJjZVJvb3QiOiIifQ==